// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddPalette snapshots and initial state should match the initial snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddPalette
    activePalette={Array []}
    projects={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <h3>
            New palette
          </h3>
          <h5>
            
          </h5>
        </div>,
        <form>
          <input
            name="paletteName"
            onChange={[Function]}
            placeholder="new palette name"
            value=""
          />
          <button
            onClick={[Function]}
          >
            Save to...
          </button>
          <select
            name="projectID"
            onChange={[Function]}
          >
            <option
              hidden={true}
            >
               select a project 
            </option>
          </select>
        </form>,
      ],
      "className": "add-palette",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3>
              New palette
            </h3>,
            <h5>
              
            </h5>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "New palette",
            },
            "ref": null,
            "rendered": "New palette",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": "h5",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              name="paletteName"
              onChange={[Function]}
              placeholder="new palette name"
              value=""
            />,
            <button
              onClick={[Function]}
            >
              Save to...
            </button>,
            <select
              name="projectID"
              onChange={[Function]}
            >
              <option
                hidden={true}
              >
                 select a project 
              </option>
            </select>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "paletteName",
              "onChange": [Function],
              "placeholder": "new palette name",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Save to...",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Save to...",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  hidden={true}
                >
                   select a project 
                </option>,
                Array [],
              ],
              "name": "projectID",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " select a project ",
                  "hidden": true,
                },
                "ref": null,
                "rendered": " select a project ",
                "type": "option",
              },
            ],
            "type": "select",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <h3>
              New palette
            </h3>
            <h5>
              
            </h5>
          </div>,
          <form>
            <input
              name="paletteName"
              onChange={[Function]}
              placeholder="new palette name"
              value=""
            />
            <button
              onClick={[Function]}
            >
              Save to...
            </button>
            <select
              name="projectID"
              onChange={[Function]}
            >
              <option
                hidden={true}
              >
                 select a project 
              </option>
            </select>
          </form>,
        ],
        "className": "add-palette",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3>
                New palette
              </h3>,
              <h5>
                
              </h5>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "New palette",
              },
              "ref": null,
              "rendered": "New palette",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": "h5",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                name="paletteName"
                onChange={[Function]}
                placeholder="new palette name"
                value=""
              />,
              <button
                onClick={[Function]}
              >
                Save to...
              </button>,
              <select
                name="projectID"
                onChange={[Function]}
              >
                <option
                  hidden={true}
                >
                   select a project 
                </option>
              </select>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "paletteName",
                "onChange": [Function],
                "placeholder": "new palette name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Save to...",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Save to...",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    hidden={true}
                  >
                     select a project 
                  </option>,
                  Array [],
                ],
                "name": "projectID",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " select a project ",
                    "hidden": true,
                  },
                  "ref": null,
                  "rendered": " select a project ",
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`AddPalette snapshots and initial state should match the snapshot with projects and activePalette 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddPalette
    activePalette={
      Array [
        "111111",
        "222222",
        "333333",
        "444444",
        "555555",
      ]
    }
    projects={
      Array [
        Object {
          "id": 1,
          "project_name": "first",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <h3>
            New palette
          </h3>
          <h5>
            
          </h5>
        </div>,
        <form>
          <input
            name="paletteName"
            onChange={[Function]}
            placeholder="new palette name"
            value=""
          />
          <button
            onClick={[Function]}
          >
            Save to...
          </button>
          <select
            name="projectID"
            onChange={[Function]}
          >
            <option
              hidden={true}
            >
               select a project 
            </option>
            <option
              value={1}
            >
              first
            </option>
          </select>
        </form>,
      ],
      "className": "add-palette",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3>
              New palette
            </h3>,
            <h5>
              
            </h5>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "New palette",
            },
            "ref": null,
            "rendered": "New palette",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": "h5",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              name="paletteName"
              onChange={[Function]}
              placeholder="new palette name"
              value=""
            />,
            <button
              onClick={[Function]}
            >
              Save to...
            </button>,
            <select
              name="projectID"
              onChange={[Function]}
            >
              <option
                hidden={true}
              >
                 select a project 
              </option>
              <option
                value={1}
              >
                first
              </option>
            </select>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "paletteName",
              "onChange": [Function],
              "placeholder": "new palette name",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Save to...",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Save to...",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  hidden={true}
                >
                   select a project 
                </option>,
                Array [
                  <option
                    value={1}
                  >
                    first
                  </option>,
                ],
              ],
              "name": "projectID",
              "onChange": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " select a project ",
                  "hidden": true,
                },
                "ref": null,
                "rendered": " select a project ",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "host",
                "props": Object {
                  "children": "first",
                  "value": 1,
                },
                "ref": null,
                "rendered": "first",
                "type": "option",
              },
            ],
            "type": "select",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <h3>
              New palette
            </h3>
            <h5>
              
            </h5>
          </div>,
          <form>
            <input
              name="paletteName"
              onChange={[Function]}
              placeholder="new palette name"
              value=""
            />
            <button
              onClick={[Function]}
            >
              Save to...
            </button>
            <select
              name="projectID"
              onChange={[Function]}
            >
              <option
                hidden={true}
              >
                 select a project 
              </option>
              <option
                value={1}
              >
                first
              </option>
            </select>
          </form>,
        ],
        "className": "add-palette",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3>
                New palette
              </h3>,
              <h5>
                
              </h5>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "New palette",
              },
              "ref": null,
              "rendered": "New palette",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": "h5",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                name="paletteName"
                onChange={[Function]}
                placeholder="new palette name"
                value=""
              />,
              <button
                onClick={[Function]}
              >
                Save to...
              </button>,
              <select
                name="projectID"
                onChange={[Function]}
              >
                <option
                  hidden={true}
                >
                   select a project 
                </option>
                <option
                  value={1}
                >
                  first
                </option>
              </select>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "name": "paletteName",
                "onChange": [Function],
                "placeholder": "new palette name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Save to...",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Save to...",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    hidden={true}
                  >
                     select a project 
                  </option>,
                  Array [
                    <option
                      value={1}
                    >
                      first
                    </option>,
                  ],
                ],
                "name": "projectID",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " select a project ",
                    "hidden": true,
                  },
                  "ref": null,
                  "rendered": " select a project ",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "host",
                  "props": Object {
                    "children": "first",
                    "value": 1,
                  },
                  "ref": null,
                  "rendered": "first",
                  "type": "option",
                },
              ],
              "type": "select",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
