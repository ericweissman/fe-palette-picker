// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateProject should match the correct snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CreateProject
    handleProject={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Create a New Project
        </h3>,
        <form>
          <input
            autoComplete="off"
            name="projectName"
            onChange={[Function]}
            placeholder="project name"
            value=""
          />
          <button
            onClick={[Function]}
          >
            Save Project
          </button>
          <h5>
            
          </h5>
        </form>,
      ],
      "className": "create-project",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Create a New Project",
        },
        "ref": null,
        "rendered": "Create a New Project",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              autoComplete="off"
              name="projectName"
              onChange={[Function]}
              placeholder="project name"
              value=""
            />,
            <button
              onClick={[Function]}
            >
              Save Project
            </button>,
            <h5>
              
            </h5>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "off",
              "name": "projectName",
              "onChange": [Function],
              "placeholder": "project name",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Save Project",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Save Project",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": "h5",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Create a New Project
          </h3>,
          <form>
            <input
              autoComplete="off"
              name="projectName"
              onChange={[Function]}
              placeholder="project name"
              value=""
            />
            <button
              onClick={[Function]}
            >
              Save Project
            </button>
            <h5>
              
            </h5>
          </form>,
        ],
        "className": "create-project",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Create a New Project",
          },
          "ref": null,
          "rendered": "Create a New Project",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                autoComplete="off"
                name="projectName"
                onChange={[Function]}
                placeholder="project name"
                value=""
              />,
              <button
                onClick={[Function]}
              >
                Save Project
              </button>,
              <h5>
                
              </h5>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoComplete": "off",
                "name": "projectName",
                "onChange": [Function],
                "placeholder": "project name",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Save Project",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Save Project",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": "h5",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
